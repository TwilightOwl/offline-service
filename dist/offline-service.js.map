{"version":3,"file":"offline-service.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/asynchronous-tools/dist/asynchronous-tools.js","../src/sender/request-operand.ts","../src/sender/storage.ts","../src/sender/sender.ts","../src/cache.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nvar _this = undefined;\nvar queues = {};\nvar getQueue = function (queueId) { return queues[queueId] || (queues[queueId] = {\n    tasks: [],\n    meta: {\n        isTaskRejected: false,\n        isTaskRejectedInNotEmptyQueue: false\n    }\n}); };\nvar showLog = false;\nvar log = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return showLog && console.log.apply(console, args);\n};\nvar OnRejection;\n(function (OnRejection) {\n    OnRejection[\"RejectAllInQueue\"] = \"rejectAllInQueue\";\n    OnRejection[\"RejectAlways\"] = \"rejectAlways\";\n    OnRejection[\"None\"] = \"none\";\n})(OnRejection || (OnRejection = {}));\nvar queue = (function (queueId, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.onIsQueueProcessing, onIsQueueProcessing = _c === void 0 ? function (isProcessing) { } : _c, _d = _b.onRejection, onRejection = _d === void 0 ? OnRejection.None : _d;\n    return function (process, tag) {\n        if (tag === void 0) { tag = ''; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new Promise(function (resolve, reject) {\n                var _a = getQueue(queueId), tasks = _a.tasks, meta = _a.meta;\n                var idle = !tasks.length;\n                log(\"\\n:: \" + queueId + \" :: CALL :: \" + tag + \" :: Queue: \" + tasks);\n                tasks.push({ process: function () { return process.apply(void 0, args); }, tag: tag, resolve: resolve, reject: reject });\n                var doNext = function () { return __awaiter(_this, void 0, void 0, function () {\n                    var _a, process, tag, resolve, reject, _b, error_1;\n                    return __generator(this, function (_c) {\n                        switch (_c.label) {\n                            case 0:\n                                if (!tasks.length)\n                                    return [2 /*return*/];\n                                _a = tasks[0], process = _a.process, tag = _a.tag, resolve = _a.resolve, reject = _a.reject;\n                                log(\":: \" + queueId + \" :: BEGIN :: \" + tag);\n                                if (!(onRejection === OnRejection.RejectAlways && meta.isTaskRejected ||\n                                    onRejection === OnRejection.RejectAllInQueue && meta.isTaskRejectedInNotEmptyQueue)) return [3 /*break*/, 1];\n                                reject(\"One of previous task in queue \\\"\" + queueId + \"\\\" was rejected\");\n                                return [3 /*break*/, 4];\n                            case 1:\n                                _c.trys.push([1, 3, , 4]);\n                                _b = resolve;\n                                return [4 /*yield*/, process()];\n                            case 2:\n                                _b.apply(void 0, [_c.sent()]);\n                                return [3 /*break*/, 4];\n                            case 3:\n                                error_1 = _c.sent();\n                                meta.isTaskRejected = true;\n                                meta.isTaskRejectedInNotEmptyQueue = true;\n                                reject(error_1);\n                                return [3 /*break*/, 4];\n                            case 4:\n                                tasks.shift();\n                                log(\":: \" + queueId + \" :: END :: \" + tag + \"\\n\");\n                                if (tasks.length) {\n                                    setTimeout(doNext, 0);\n                                }\n                                else {\n                                    meta.isTaskRejectedInNotEmptyQueue = false;\n                                    onIsQueueProcessing(false);\n                                }\n                                return [2 /*return*/];\n                        }\n                    });\n                }); };\n                if (idle) {\n                    onIsQueueProcessing(true);\n                    doNext();\n                }\n                else {\n                    log(\":: \" + queueId + \" :: Waiting... :: \" + tag);\n                }\n            });\n        };\n    };\n});\n\n// TODO: make function version without decorators\n// TODO: make the queue when init decorator have been applied, \n//    if method is called without init decorator at all, throw \"you should apply init\"\n//    if method is called just before decorated init function, throw \"you should call initialize function before any @method functions\"\n// TODO: unit tests\n// TODO: think about reinitialization, how should it work?\nvar generateQueue = function (name) { return queue(name + \"-\" + Date.now() + \"-\" + Math.random(), {\n    onIsQueueProcessing: function (isProcessing) { },\n    onRejection: OnRejection.RejectAlways\n}); };\nvar initialComplete = function () {\n    throw 'Call complete before initialization';\n};\nvar generateInitialPromise = function (target) { return target.__queue(function () { return new Promise(function (resolve, reject) {\n    target.__complete = function (ok) {\n        target.__init = ok;\n        (ok ? resolve : reject)();\n    };\n}); }); };\nvar aiWithAsyncInit = function (constructor) {\n    var Wrapper = /** @class */ (function (_super) {\n        __extends(Wrapper, _super);\n        function Wrapper() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this.__queue = generateQueue('QUEUE-INSTANCE');\n            _this.__complete = initialComplete;\n            _this.__init = false;\n            _this.__initPromise = generateInitialPromise(_this);\n            _this.__initPromise().catch(function () { });\n            return _this;\n        }\n        /**\n          We should use unique keys for static fields, like this:\n          ```\n            const _queue = Symbol('queue');\n    \n            class Wrapper extends constructor {\n              static [_queue] = ...\n            }\n          ```\n          But TS crashes, see https://github.com/microsoft/TypeScript/issues/23736\n        */\n        Wrapper.__queue = generateQueue('QUEUE');\n        Wrapper.__complete = initialComplete;\n        Wrapper.__init = false;\n        Wrapper.__initPromise = generateInitialPromise(Wrapper);\n        Wrapper._ = Wrapper.__initPromise().catch(function () { });\n        return Wrapper;\n    }(constructor));\n    return Wrapper;\n};\nvar aiInit = function (target, key, value) { return ({\n    //@ts-ignore\n    value: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return __awaiter(this, void 0, void 0, function () {\n            var isStatic, object, result, _a, error_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        isStatic = !this.constructor.__initPromise;\n                        object = this;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 6, , 7]);\n                        if (!value.initializer) return [3 /*break*/, 3];\n                        return [4 /*yield*/, value.initializer.apply(this).apply(void 0, args)];\n                    case 2:\n                        _a = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, value.value.apply(this, args)];\n                    case 4:\n                        _a = _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        result = _a;\n                        object.__complete(true);\n                        return [2 /*return*/, result];\n                    case 6:\n                        error_1 = _b.sent();\n                        object.__complete(false);\n                        throw error_1;\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    }\n}); };\nvar aiMethod = function (target, key, value) { return ({\n    //@ts-ignore\n    value: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return __awaiter(this, void 0, void 0, function () {\n            var func, wrapped, unwrap, isStatic, object, _a, _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        func = function () { return value.initializer\n                            ? value.initializer.apply(_this).apply(void 0, args) : value.value.apply(_this, args); };\n                        wrapped = function () { return Promise\n                            .resolve(func())\n                            .then(function (result) { return ({ ok: true, result: result }); })\n                            .catch(function (result) { return ({ ok: false, result: result }); }); };\n                        unwrap = function (_a) {\n                            var _b = _a.ok, ok = _b === void 0 ? true : _b, _c = _a.result, result = _c === void 0 ? undefined : _c;\n                            return ok\n                                ? Promise.resolve(result)\n                                : Promise.reject(result);\n                        };\n                        isStatic = !this.constructor.__initPromise;\n                        object = this;\n                        if (!object.__init) return [3 /*break*/, 2];\n                        return [4 /*yield*/, func()];\n                    case 1:\n                        _a = _c.sent();\n                        return [3 /*break*/, 4];\n                    case 2:\n                        _b = unwrap;\n                        return [4 /*yield*/, object.__queue(wrapped)()];\n                    case 3:\n                        _a = _b.apply(void 0, [_c.sent()]);\n                        _c.label = 4;\n                    case 4: // isStatic ? this : this.constructor;\n                    return [2 /*return*/, _a];\n                }\n            });\n        });\n    }\n}); };\n\nexport { queue, aiWithAsyncInit, aiInit, aiMethod };\n//# sourceMappingURL=asynchronous-tools.js.map\n","enum PromiseStatus {\n  Pending = 'pending',\n  Fulfilled = 'fulfilled',\n  Rejected = 'rejected'\n}\n\nconst NETWORK_ERROR = 'network error'\n\ninterface Data {\n  url: string,\n  params: object\n}\n\nexport default class RequestOperand {\n\n  public data!: Data\n  private primary!\n  private secondary: any\n  public id: number\n\n  constructor(url, params, id) {\n    this.data = { url, params }\n    this.primary = this.createPromise()\n    this.id = id\n  }\n  \n  private createPromise = () => {\n    let resolve, reject, status: string\n    return { \n      promise: new Promise((res, rej) => {\n        resolve = (...args: any[]) => ( status = status || PromiseStatus.Fulfilled, res(...args) )\n        reject = (...args: any[]) => ( status = status || PromiseStatus.Rejected, rej(...args) )\n      }),\n      resolve, \n      reject, \n      get status () { return status || PromiseStatus.Pending } \n    }\n  }\n\n  public get isNetworkError () {\n    return this.primary.status === PromiseStatus.Rejected\n  }\n\n  public get primaryPromise () {\n    return this.primary.promise\n  }\n\n  public get resolvePrimary () {\n    return this.primary.resolve\n  }\n\n  public get resolveSecondary () {\n    return this.secondary.resolve\n  }\n\n  public get resolve () {\n    return this.primary.status === PromiseStatus.Rejected ? this.secondary.resolve : this.primary.resolve\n  }\n\n  public get reject () {\n    return this.primary.status === PromiseStatus.Rejected ? this.secondary.reject : this.primary.reject\n  }\n\n  public rejectWithNetworkError = () => {\n    if (this.primary.status === PromiseStatus.Pending) {\n      this.secondary = this.createPromise()\n      this.primary.reject({\n        error: 'network error',\n        promise: this.secondary.promise\n      })\n    }\n  }\n\n}","import { aiWithAsyncInit, aiMethod, aiInit } from 'asynchronous-tools';\n\nconst KEY = '__offline__'\nconst REGISTRY_KEY = KEY + 'registry'\n\n@aiWithAsyncInit\nexport default class Storage {\n\n  private sequence = 0\n  private registry = []\n\n  constructor(storage) {\n    this.storage = storage\n    this.init()\n  }\n\n  @aiInit\n  private async init() {\n    const data = await this.storage.get(REGISTRY_KEY)\n    this.registry = data ? data : []\n    this.sequence = this.registry.length ? this.registry[this.registry.length - 1] : 0\n  }\n\n  get newID() {\n    return ++this.sequence\n  }\n\n  @aiMethod\n  public async addRequest(data: any) {\n    const id = this.newID\n    await this.storage.set(KEY + id, { id, data })\n    this.registry.push(id)\n    await this.storage.set(REGISTRY_KEY, this.registry)\n    return id\n  }\n\n  @aiMethod\n  public async getRequests() {\n    const data = await this.storage.multiGet(this.registry.map(id => KEY + id))\n    return data\n  }\n\n  @aiMethod\n  public async deleteRequest(id) {\n    await this.storage.delete(KEY + id)\n    this.registry = this.registry.filter(item => item !== id)\n    await this.storage.set(REGISTRY_KEY, this.registry)\n  }\n\n}","import { aiWithAsyncInit, aiMethod, aiInit } from 'asynchronous-tools';\n\nimport RequestOperand from './request-operand'\nimport Storage from './storage'\n\ninterface Deffered {\n  func?: Function,\n  timer?: any\n}\n\n@aiWithAsyncInit\nexport default class Sender {\n\n  private queue: RequestOperand[] = []\n\n  private connected = true\n  private idle = true\n  private process = false\n\n  private request: any\n  private storage: any\n\n  private deffered: Deffered = {}\n  \n  constructor ({ request, storage }) {\n    this._storage = storage\n    this.request = \n    // request || \n      ((ok = true) => new Promise((resolve, reject) => setTimeout(() => !ok ? resolve('OK') : reject('bad...'), 2000)))\n  }\n\n  // должна вызываться из приложения, когда сторадж будет готов, и произойдет инициализация пользователя. может быть вызван повторно при смене пользователя\n  // повесить декоратор инициализации, т.к. нельзя вызывать какие-то публичные методы предварительно не загрузив старые неотправленные данные\n  @aiInit\n  public async restoreRequestsFromStorage() {\n    this.storage = new Storage(this._storage)\n    const requests = await this.storage.getRequests()\n    requests.forEach(({ id, data: { url, params } }) => {\n      const ro = new RequestOperand(url, params, id)\n      this.queue.push(ro)\n    })\n    this.runner()\n  }\n\n  @aiMethod\n  public finalize() {\n    this.queue.forEach(ro => ro.reject('Finalization'))\n  }\n\n  @aiMethod\n  public async send(url, params) {\n\n    const ro = new RequestOperand(url, params)    \n    this.queue.push(ro);\n\n    if (!this.idle) {\n      const requestID = await this.storage.addRequest(ro.data)\n      ro.id = requestID\n      if (!this.connected) {\n        ro.rejectWithNetworkError()\n      }\n    }\n\n    this.runner()\n    return ro.primaryPromise\n  }\n\n  private runner = async (auto = false) => {    \n    if (this.queue.length) {\n      if (this.idle || auto) {\n        this.idle = false\n        await this.task(this.queue[0])\n        this.queue.shift()\n        setTimeout(() => this.runner(true), 0)\n      } else {\n        if (this.process) {\n          console.log('Nothing')\n        } else {\n          console.log('runDeffered')\n          this.runDeffered()\n        }\n      }\n    } else {\n      this.idle = true\n      this.process = false\n    }\n  }\n\n  private task = async (requestOperand: RequestOperand) => {\n    const { url, params } = requestOperand.data\n    const key = 'TODO get key from url or params'\n    let requestID = requestOperand.id\n    console.log('task', requestOperand)\n\n    return new Promise(async resolve => {\n\n      const make = async (debugURL = url) => {\n        this.process = true\n        try {\n          const response = await this.request(debugURL, params)\n          this.throwIfNetworkError(response)\n          this.connected = true\n          requestOperand.resolve(response)\n          resolve(response)\n          requestID && await this.storage.deleteRequest(requestID)\n        } catch (error) {\n          if (requestID === undefined) {\n            requestID = await this.storage.addRequest(requestOperand.data)\n          }\n          this.connected = false\n          console.log(error)\n          this.rejectAll()\n          this.createDeffered(() => make(debugURL - 1))\n          this.process = false\n        } \n      }\n\n      return make()\n    })\n  }\n\n  private throwIfNetworkError = (response) => {}\n\n  private rejectAll = () => this.queue.forEach(ro => ro.rejectWithNetworkError())\n\n  private createDeffered = (func: Function) => {\n    if (this.deffered && this.deffered.timer) {\n      clearTimeout(this.deffered.timer)\n      console.error('Overwrite old deferred!')\n    }\n    this.deffered = { func, timer: setTimeout(this.runDeffered, 1000) }\n  }\n\n  private runDeffered = () => {\n    if (this.deffered && this.deffered.func) {\n      clearTimeout(this.deffered.timer)\n      const func = this.deffered.func\n      this.deffered = {}\n      func()\n    } else {\n      console.error('Run unexisted deferred!')\n    }\n  }\n\n}","import Sender from './sender'\n\nexport enum RefreshCacheStrategy {\n    RefreshWhenExpired,\n    RefreshAlways,\n    NoStore\n}\n\nexport enum RequestCacheStrategy {\n    CacheOnly,\n    NetworkOnly,\n    CacheFallingBackToNetwork,\n    NetworkFallingBackToCache,\n    CacheThenNetwork\n}\n\nexport enum RequestTypes {\n    DataSendRequest,\n    DataReceiveRequest\n}\n\ninterface RequestInitWithCacheParameters extends RequestInit {\n    refreshCacheStrategy?: RefreshCacheStrategy,\n    requestCacheStrategy?: RequestCacheStrategy,\n    requestType?: RequestTypes\n}\n\nenum CacheStatus {\n    DoesNotExist,\n    Unexpired,\n    Expired,\n}\n\nexport interface ResponseWithCacheInfo extends Response {\n    cached?: boolean,\n    expired?: boolean\n}\n\ntype MergeResponseWithCacheInfo = (response: Response, cacheStatus: CacheStatus | undefined) => ResponseWithCacheInfo;\n\ninterface RequestResult {\n    response: Response,\n    cacheStatus?: CacheStatus\n}\n\ninterface CacheThenNetworkRequestResult {\n    response?: Response,\n    cacheStatus?: CacheStatus\n}\n\ntype RequestFunction = (url: RequestInfo, params?: RequestInit) => Promise<RequestResult>;\n\ntype CacheThenNetworkRequestFunction = (url: RequestInfo, params?: RequestInit) => Promise<CacheThenNetworkRequestResult>;\n\nenum CachingResult {\n    // HasBeenAdded,\n    HasBeenUpdated,\n    NotUpdated\n}\n\ntype CachingFunction = (url: RequestInfo, params: RequestInit | undefined, data: any, cacheStatus?: CacheStatus) => Promise<CachingResult>;\n\nexport interface CacheThenNetworkRequestStrategyResult {\n    cached?: ResponseWithCacheInfo,\n    network: Promise<ResponseWithCacheInfo>\n}\n\ntype CustomRequest = (url: RequestInfo, params: RequestInitWithCacheParameters) => Promise<ResponseWithCacheInfo | CacheThenNetworkRequestStrategyResult>;\n\ntype HttpRequest = (url: RequestInfo, data?: RequestInit) => Promise<Response>;\n\ninterface CachedItem {\n    key: string,\n    data: any, // Response\n    until: number\n}\n\ninterface Storage {\n    //TODO: return result \n    set: (key: string, data: CachedItem) => Promise<boolean>,\n    get: (key: string) => Promise<null | CachedItem>,\n    delete: (key: string) => Promise<boolean>,\n}\n\ntype GetCacheKey = (url: RequestInfo, params?: RequestInit) => string;\n\ntype Serializer = (response: Response) => any;\n\ninterface Constructor {\n    request: HttpRequest,\n    storage: Storage,\n    getCacheKey: GetCacheKey,\n    serializer: Serializer\n}\n\nexport default class OfflineService {\n    private httpRequest: HttpRequest;\n    private storage: Storage;\n    private getCacheKey: GetCacheKey;\n    private serializer: Serializer;\n    private sender: Sender;\n\n    constructor({ request, storage, getCacheKey, serializer }: Constructor) {\n        this.httpRequest = request;\n        this.storage = storage;\n        //TODO: implement key extractor\n        this.getCacheKey = getCacheKey;\n        this.serializer = serializer;\n\n        this.sender = new Sender({\n            request,\n            storage\n        });\n    }\n\n    public init = () => this.sender.restoreRequestsFromStorage()\n\n    // ==================== Storage functions ====================\n     \n    private setCacheItem = async (key: string, data: any, ttl = 10000) => {\n        return this.storage.set(key, { key, data, until: Date.now() + ttl });\n    }\n\n    private getCacheItem = async (key: string) => {\n        const cached = await this.storage.get(key);\n        if (cached === null) {\n            return { exist: false }\n        } else {\n            return { \n                exist: true, \n                expired: cached.until < Date.now(), \n                data: cached.data \n            };\n        }\n    }\n\n    // ==================== Request functions ====================\n\n    private networkOnlyRequest: RequestFunction = async (...args) => {\n        const response = await this.httpRequest(...args);\n        return ({ response: { ...response, serialized: await this.serializer(response) } }) as RequestResult;\n    }\n    \n    private cacheOnlyRequest: RequestFunction = async (url, params) => {\n        const cacheKey = this.getCacheKey(url, params);\n        const { exist, expired, data } = await this.getCacheItem(cacheKey);\n        if (exist) {\n            return { response: data, cacheStatus: expired ? CacheStatus.Expired : CacheStatus.Unexpired }\n        } else {\n            //TODO: think about format of this error\n            throw \"The requested data doesn't exist in the cache\"\n        }\n    };\n    \n    private networkFallingBackToCacheRequest: RequestFunction = async (url, params) => {\n        try {\n            const { response } = await this.networkOnlyRequest(url, params);\n            if (response.ok) {\n                return { response }\n            } else {\n                throw response\n            }\n        } catch (networkError) {\n            try {\n                // without \"await\" catch block will not handle exception!\n                return await this.cacheOnlyRequest(url, params);\n            } catch (cacheError) {\n                //TODO: think about format of this error, maybe provide networkError somehow...\n                throw \"The network request has been failed but cached data doesn't exist\"\n            }\n        }\n    };\n    \n    private cacheFallingBackToNetworkRequest: RequestFunction = async (url, params) => {\n        try {\n            const { response, cacheStatus } = await this.cacheOnlyRequest(url, params);\n            if (cacheStatus === CacheStatus.Unexpired) {\n                return { response, cacheStatus }\n            } else {\n                throw \"The cache data is expired\"\n            }\n        } catch (cacheError) {\n            try {\n                return await this.networkOnlyRequest(url, params);\n            } catch (networkError) {\n                //TODO: think about format of this error, maybe provide networkError somehow...\n                throw \"The cache doesn't exist or expired but network request has been faild\"\n            }\n        }\n    }\n    \n    // It's just a first part of algorythm, in the \"request\" method a second part will be invoked \n    //   by recursive call of \"request\" with NetworkOnly strategy\n    private cacheThenNetworkRequest: CacheThenNetworkRequestFunction = async (url, params) => {\n        try {\n            return await this.cacheOnlyRequest(url, params)\n        } catch (error) {\n            return { cacheStatus: CacheStatus.DoesNotExist }\n        }\n    }\n\n    // ==================== Caching functions ====================\n\n    private refreshAlwaysCaching: CachingFunction = async (url, params, data, cacheStatus) => {\n        if (cacheStatus !== undefined) {\n            // the data has been received from cache, we sholudn't update cache data\n            return CachingResult.NotUpdated\n        }\n        const cacheKey = this.getCacheKey(url, params);\n        try {\n            await this.setCacheItem(cacheKey, data);\n            return CachingResult.HasBeenUpdated\n        } catch (error) {\n            //TODO: think\n            throw error\n        }\n    };\n    \n    private refreshWhenExpiredCaching: CachingFunction = async (url, params, data, cacheStatus) => {\n        if (cacheStatus !== undefined) {\n            // the data has been received from cache, we sholudn't update cache data\n            return CachingResult.NotUpdated\n        }\n    \n        const cacheKey = this.getCacheKey(url, params);\n        const { exist, expired, ...rest } = await this.getCacheItem(cacheKey);\n        if (exist && !expired) {\n            return CachingResult.NotUpdated\n        } else {\n            await this.setCacheItem(cacheKey, data);\n            return CachingResult.HasBeenUpdated\n        }\n    \n    };\n\n    private mergeResponseWithCachedInfo: MergeResponseWithCacheInfo = (response: Response, cacheStatus: CacheStatus | undefined) => {\n        return cacheStatus === undefined\n            ? response \n            : { ...response, cached: true, expired: cacheStatus === CacheStatus.Expired }\n    }\n\n    public request = async (url: RequestInfo, params: RequestInitWithCacheParameters) => {\n        const { \n            requestType = RequestTypes.DataReceiveRequest, \n            // requestCacheStrategy = RequestCacheStrategy.CacheFallingBackToNetwork, \n            // refreshCacheStrategy = RefreshCacheStrategy.RefreshAlways,\n            ...rest\n        } = params;\n        return requestType === RequestTypes.DataSendRequest ? await this.sendRequest(url, rest) : await this.receiveRequest(url, rest)\n    }\n\n    private sendRequest: CustomRequest = (url: RequestInfo, params: RequestInitWithCacheParameters) => {\n        return this.sender.send(url, params)\n        return Promise.resolve({} as CacheThenNetworkRequestStrategyResult)\n        //const cacheKey = this.getCacheKey(url, params)\n        //await this.saveToQueue({ url, params, cacheKey, entity: (params || {}).entity || undefined });\n\n    }\n\n    private receiveRequest: CustomRequest = async (url: RequestInfo, params: RequestInitWithCacheParameters) => {\n        const { \n            refreshCacheStrategy = RefreshCacheStrategy.RefreshAlways,\n            requestCacheStrategy = RequestCacheStrategy.CacheFallingBackToNetwork, \n            // requestType = RequestTypes.DataReceiveRequest, \n            ...restParams \n        } = params;\n        //if (requestType === RequestTypes.DataReceiveRequest) {\n            try {\n                const { response, cacheStatus } = await ({\n                    [RequestCacheStrategy.NetworkOnly]: this.networkOnlyRequest,\n                    [RequestCacheStrategy.CacheOnly]: this.cacheOnlyRequest,\n                    [RequestCacheStrategy.NetworkFallingBackToCache]: this.networkFallingBackToCacheRequest,\n                    [RequestCacheStrategy.CacheFallingBackToNetwork]: this.cacheFallingBackToNetworkRequest,\n                    [RequestCacheStrategy.CacheThenNetwork]: this.cacheThenNetworkRequest,\n                }[requestCacheStrategy] || (() => { throw 'Unknown request cache strategy' }))(url, restParams);\n    \n                if (requestCacheStrategy === RequestCacheStrategy.CacheThenNetwork) {\n                    return {\n                        ...response ? { cached: this.mergeResponseWithCachedInfo(response, cacheStatus) } : {},\n                        network: this.receiveRequest(url, { ...params, requestCacheStrategy: RequestCacheStrategy.NetworkOnly }) as Promise<ResponseWithCacheInfo>\n                    }\n                }\n    \n                if (response!.ok) {\n                    try {\n                        // We have not to wait cache update and we don't need the result of caching\n                        // const cacheResult = await ({\n                        ({\n                            [RefreshCacheStrategy.NoStore]: () => {},\n                            [RefreshCacheStrategy.RefreshAlways]: this.refreshAlwaysCaching,\n                            [RefreshCacheStrategy.RefreshWhenExpired]: this.refreshWhenExpiredCaching,\n                        }[refreshCacheStrategy] || (() => { throw 'Unknown refresh cache strategy' }))(url, restParams, response, cacheStatus);\n                        \n                        return this.mergeResponseWithCachedInfo(response!, cacheStatus);\n    \n                    } catch (error) {\n                        //TODO: provide error object\n                        throw 'Caching has been failed'\n                    }\n                } else {\n                    //TODO: to think about this case\n                    throw response\n                }\n            } catch (error) {\n                throw error;\n            }\n    \n        //} else if (requestType === RequestTypes.DataSendRequest) {\n            // TODO: big work!!!!!!!\n\n            /**\n             * 1. записать в сторадж (если очередь на отправку пустая, то в сторадж пишем только если пришла ошибка отправки нашего запроса,\n             *      если очередь не пустая, не важно нету сейчас соединения или запросы из очереди прямо сейчас отправляются успешно, пишем\n             *      сначала в сторадж, а потом добавляем в очередь запрос. т.к. вполне возмоно при наличии сети, что просто до запроса не дойдет\n             *      очередь потому что пользователь вырубил приложение)\n             *  - hash, \n             *  - request data \n             *  - requestId (по сути только url, параметризуется можно ли слать еще запросы на этот url (но с другим хэшэм) когда уже есть \n             *      неотправленные запросы\n             *  - entity возможно понадобится для чтения сущностей (ЭТО В СТОРАДЖЕ НЕ НУЖНО, это делается на уровне сторов)\n             *  - автоматизировать подсовывание в гет запросы сущностей, не отправленных в пост запросах нельзя т.к.:\n             *      - не известно в каком формате должны придти сохраненные сущности ведь они еще не сохранены\n             *      - связь между гет запрами и неотправленными сущностями может быть \"много ко многим\" тогда не обойтись одим только entity и \n             *          вообще сервис не должен знать о смысловой нагрузке данных и бизнес логике и потому не сможет подсовывать в гет запросы \n             *          какие-то сохраненные данные, это дело бизнес логики, по entity БЛ сможет получить неотправленные данные и как-то их \n             *          обработав подсунуть в гет запрос\n             * \n             * 2. если есть данные для отправки, то уже должен быть запущен \"параллельный\" процесс по отправке данных, но при добавлении новых \n             *      данных, нужно не ждать следующую итерацию отправки, а сразу попробовать запустить\n             *  - избегать утечки\n             *  - когда данных для отправки нет, то и в фоне не должно выполняться никаких проверок, процесс запускается при сохраненнии \n             *      данных и продолжается пока есть неотправленные данные\n             *  - нужно сохранять последовательность с которой пользователь пытался отправить данные!!!\n             *  - у очереди должен быть текущий статус - есть сеть или нету, по результату последнего на данный момент выполненного запроса,\n             *      если статус НЕТ СЕТИ новый запрос при попадании в очередь резолвится сразу с ошибкой сети и вторым промисом (описано дальше) \n             *      если статус ЕСТЬ СЕТЬ то новый добавленный в очередь запрос ожидает своей очереди на отправку, т.е. первый промис в \n             *      состоянии ожидания. для внешнего вызываемого этот запрос приложения будет как-будто запрос просто долго выполняется\n             * \n             * 3. Публичная функция отправки (запись в сторадж -> сетевой запрос) должна быть промисом, который при нормальной работе должен \n             *      зарезолвиться (реджект если в сторадж не удалось записать, т.е. какие-то не предвиденные технические ошибки) и вернуть:\n             *      - (1) результат запроса (в случае рабочей сети, при этом сам результат может быть и плохим (допустимые ошибки бизнес логики\n             *          с сервера), не рабочую сеть надо определять по эксепшену fetch'а или ok=false, надо в доке уточнить) Как обрабатывать\n             *          5хх ошибки? сохранять ли порядок запросов если застопорились на 5хх и новые запросы даже не будут пытаться отправляться\n             *          т.к. застряли на каком-то запросе с ответом 5хх, что это? ошибка безнес логики или ошибка сервера?\n             *      - (2) другой промис, который зарезолвится, когда эти данные все таки отправятся через фоновый процесс, этот промис должен вернуть \n             *          результат как в первом случае. ( * * * После перезапуска приложения неотправленные запросы десериализуются из стораджа, \n             *          но промисов уже нет, колбэки тоже не сериализовать, можно сделать эмиттер, а после перезапуска приложения, кому надо тот \n             *          подпишется на события отправления данных, но это слишком заморочено, и не понятно пока как в коде это сделать лаконично, \n             *          и вообще нужно ли после перезапуска приложения отслеживать отправку ранее не отправленных данных??? * * * )\n             *          В этом случае (2) мы знаем что такой результат говорит о том, что данные сохранились в сторадж\n             *          и бизнес логика должна как-то узнать об этом, т.к. могут быть какие-то данные в интерфейсе полученные гет запросом, но к \n             *          ним надо подмешать эти сохраненные пока еще не отправленные данные. А при завершении второго промиса, мы понимаем что данные\n             *          успешно отправились на сервер (или не успешно, в случае ошибок с сервера, которые допускает логика работы приложения) и \n             *          удалились из стораджа -> надо опять проинформировать бизнес логику о том что теперь этих данных нет в сторадже и бери их\n             *          с сервера нормальным гет запросом (теперь если сети нету, то гет запрос может сфэйлиться и данные возьмутся из кэша, но \n             *          в кэше данные с прошлого гет запроса и данных которые мы отправили пост запросов там еще нету, можно пренебречь этой\n             *          ситуацией как редкой, \n             *          // --- этот блок сильно замороченный и для обычной работы он не нужен, только если сильно упороться --- //\n             *          но можно оставлять в сторадже данные, пометив их как отправленные, и они будут использоваться только лишь \n             *          для подмешивания в устаревшие данные из кэша. когда гет запрос все таки выполнится, кэш обновится, в не уже будут эти \n             *          добавленные данные, т.к. они теперь с бэка придут, и в стордже их можно почистить. тогда надо придумывать механизм \n             *          подсчета ссылок, т.к. эти отправленные но оставшиеся данные в сторадже могут быть использованы разными гет запросами)\n             *          // ---------------------------------------------------------------------------------------------------- //\n             *          Информировать БЛ о данных сохраненных и удаленных в стордже нужно через механизм подписок или колбэков, но потом эти\n             *          обработчики уже обновляют mobx сторы бизнес логики, чтобы сам сервис не был завязан на mobx. Или когда вернулся результат (2)\n             *          это и значит что в сторадже появилист данные, а когда в будущем зарезолвится возвращенный промис, это значит данные отправились.\n             *          Эти данные из стораджа могут понадобиться вообще в другом месте а не в месте вызова публичного метода отправки, поэтому\n             *          их надо взяв из стораджа положить в observable, а любые другие публичные данные любых сторов, которые в результат гет запроса \n             *          подмешивают стордж данные, должны быть computed и завязаны на observable пришедшие с гет запроса и observable пришедший со\n             *          стораджа. \n             *  \n             *          Пример показывающий как данные полученные гет запросом в AnyBusinessMobxStore могут быть совмещены с данными которые были\n             *              неуспешно отправлены пост запросом из стора AnyOtherBusinessMobxStore. TempStorageMobxStore - стор для хранения \n             *              observable копий данных из стораджа (данных находящихся в очереди на отправку)\n             *          \n             *        AnyBusinessMobxStore:\n             *          receiveRequest  ->  observable items  ->  computed dataForUI = this.items + TempStorageMobxStore.savedButNotSentData[entity]\n             *                                                                                                                   ^\n             *        TempStorageMobxStore:                                                                                       \\\n             *          observable savedButNotSentData = { [entity]: ... , [entity]: ... }                                         \\ computed reaction\n             *                                                                                                                      \\    \n             *        AnyOtherBusinessMobxStore:                                                                                     \\      \n             *          sendRequest(entity)  ->  (bad network)  ->  TempStorageMobxStore.actionRetrieveFromStorageByEntity(entity): savedButNotSentData[entity] = savedData\n             *                                                  \\\n             *                                                   \\промис отвечающий за реальную отправку данных на сервер резолвится   \n             *                                                    \\\n             *                                                  чистим данные в сторе, т.к. этих данных теперь нету в сторадже - они успешно (или не успешно, но это норм, если бэку данные не понравились) отправлены на сервер\n             *                                                  TempStorageMobxStore.actionClearDataByEntity(entity): delete savedButNotSentData[entity]\n             *  \n             *           sendRequest(entity)  ->  (good network) ->  как-то вручную в бизнес логике запускать AnyBusinessMobxStore.receiveRequest.\n             *              Или предумать вообще систему отдельную от этой, которая будет хранить зависимости данных между сторами, и запускать\n             *              получение данных с сервера автоматически, через реакции. Либо как-то инвалидировать кэш.\n             *  \n             *  Пример попадания запросов в очередь:\n             *      - запрос пришел. очередь пуста?\n             *          ? пытаемся отправить. результат переводим в бинарный: есть сеть (2хх, 4хх,  5хх???) или нет сети (5хх ???, catch)\n             *            если во время выполнения запроса прилетает новый запрос, пишем данные нового запроса в сторадж и помещаем новый запрос \n             *            в очередь. при инициализации очереди, у нее статус в сети, поэтому новый запрос просто будет ждать своей очереди.\n             *            текущий запрос выполнился с результатом ЕСТЬ СЕТЬ?\n             *              ? резолвим основной промис с результатом запроса, выкидываем из очереди запрос, т.к. он уже успешно выполнился,\n             *                  статус очереди ставим ЕСТЬ СЕТЬ, переходим к выполнению следующего запроса в очереди (если есть)\n             *              : пишем данные запроса в сторадж, резолвим основной промис с результатом НЕТ СЕТИ и со вторым промисом, ожидающим\n             *                  успешного завершения запроса. сам запрос остается в очереди, но с ожидающим вторым промисом. для всех запросов\n             *                  в очереди (которые еще не зарезолвили основной промис) резолвим по аналогии с текущим запросом, и так же оставляем\n             *                  их в очереди с промисом ожидающим корректного завершения запроса.\n             *          : пишем данные нового запроса в сторадж и помещаем новый запрос в очередь. текущее состояние очереди == ЕСТЬ СЕТЬ?\n             *              ? до этого запроса очередь сама дойдет.\n             *              : резолвим основной промис с результатом НЕТ СЕТИ и со вторым промисом, ожидающим успешного завершения запроса. запрос\n             *                  остается в очереди.\n             *      - если очередь не пустая в статусе НЕТ СЕТИ, то периодически запускается попытка отправки заново первого запроса в сети.\n             *      - если в непустую очередь со статусом НЕТ СЕТИ попадает новый запрос, то не дожидаясь следующего автоматического запуска\n             *          попытки отправки первого запроса в очереди, сами запускаем ее, при этом таск для автоматической отправки удаляется,\n             *          но при неуспешной отправке опять запускается новый таск (таск - запуск попытки отправки через setInterval, таск \"живет\n             *          в памяти\" переодически запуская попытку отправки, запуская отправку вручную, мы чистим setInterval, и при отсутствии сети\n             *          создаем новый таск - новый setInterval) при первой же успешной отправке запроса, текущий таск должен чиститься.\n             *      - для перестраховки, чтобы таск не запустил тот же запрос или паралельно следующий, нужно в свойствах очереди также хранить\n             *          флаг processing, говорящий о том что в данный момент выполняются запросы в очереди. при успешном завершении запроса и\n             *          переходе к следующему запросу, processing остается true. если автоматический таск при попытке запустить отправку запроса\n             *          натыкается на состояние processing == true, значит что-то пошло не так и остался не удаленный таск, поэтому: \n             *          не запускаем попытку отправки запроса (уже запущено), таск удаляем, новый таск создастся если очередной запрос опять \n             *          сфэйлится с ошибкой отсутствия сети\n             */\n\n            throw 'TODO'\n        // } else {\n        //     throw 'Unknown request type';\n        // }\n    }\n}"],"names":["__awaiter","__generator","tslib_1.__decorate"],"mappings":"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"}